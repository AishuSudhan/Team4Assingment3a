version: '3.4'

networks:
  frontend:
  backend:

services:
  eventcatalog:
    image: events/eventcatalogapi
    build:
      context: .\EventCatalogAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=EventCatalogDb;User ID=sa;Password=Eventcatalog(2$);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false"
      ExternalBaseUrl: http://localhost:5000
    ports:
      - "5000:80"
    container_name: eventscatalog
    networks:
      - frontend
      - backend
    depends_on: 
      - mssqlserver
 
  eventstokenserver:
    image: events/tokenapi
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User ID=sa;Password=Eventcatalog(2$);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false"
      MvcClient: http://localhost:7080
    ports:
      - "5021:80"
    container_name: eventstokenapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokensqlserver

  cart:
    image: events/cartapi
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    environment:
      IdentityUrl: http://10.0.0.171:5021
      ConnectionString: basket.data
    ports:
      - "7022:80"
    container_name: eventscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - eventstokenserver
      - basket.data

  order:
    image: events/orderapi
    build: 
      context: .\OrderApi
      dockerfile: Dockerfile
    environment:
      IdentityUrl: http://10.0.0.171:5021
      ConnectionString: "Data Source=ordersqlserver;Initial Catalog=OrdersDb;User ID=sa;Password=Eventcatalog(2$);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false"
    ports:
      - "7030:80"
    container_name: eventsorderapi
    networks:
      - frontend
      - backend
    depends_on:
      - eventstokenserver
      - ordersqlserver
     
  webmvcnew:
    image: events/webmvcnew
    build:
      context: .\WebMVCnew
      dockerfile: Dockerfile
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      EventCatalogUrl: http://eventcatalog
      IdentityUrl: http://10.0.0.171:5021
      CallBackUrl: http://localhost:7080
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_51MX8PwHcxUBIhbJWwAm3pQrXPmaA36sgojBgQHfLZCJMkvaqvFVOgVOonVx5leGjf7QoDsaIn7u8xUyKSClNSs7A00FbSrV1yo
      StripePrivateKey: sk_test_51MX8PwHcxUBIhbJW0YgLbk9PGWmO4CPFpuKZc4UYyqaZb5RMDbVMQrVnVpqv5dpNiBqIzhixHQxq1THEWolanR3a00YOZLPrsW
    ports:
      - "7080:80"
    container_name: eventsticketsshop
    networks:
      - frontend
    depends_on:
      - eventcatalog
      - eventstokenserver
      - cart
      - order
     
  

  mssqlserver:
     image: "mcr.microsoft.com/mssql/server:latest"
     environment:
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Eventcatalog(2$)
       SA_PASSWORD: Eventcatalog(2$)
     ports:
       - "5001:1433"
     container_name: eventssqlserver
     networks:
       - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Eventcatalog(2$)
       SA_PASSWORD: Eventcatalog(2$)
    ports:
      - "5010:1433"
    container_name: eventstokensqlserver
    networks:
      - backend

  ordersqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Eventcatalog(2$)
       SA_PASSWORD: Eventcatalog(2$)
    ports:
      - "1460:1433"
    container_name: eventsordersqlserver
    networks:
      - backend

  basket.data:
    image: redis
    ports:
      - "7021:6379"
    container_name: baskettdata
    networks:
      - backend
