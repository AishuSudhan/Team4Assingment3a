version: '3.4'

networks:
  frontend:
  backend:

services:
  eventcatalog:
    image: events/eventcatalogapi
    build:
      context: .\EventCatalogAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=mssqlserver;Initial Catalog=EventCatalogDb;User ID=sa;Password=Eventcatalog(2$);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false"
      ExternalBaseUrl: http://localhost:5000
    ports:
      - "5000:80"
    container_name: eventscatalog
    networks:
      - frontend
      - backend
    depends_on: 
      - mssqlserver
 
  eventstokenserver:
    image: events/tokenapi
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    environment:
      ConnectionString: "Data Source=tokensqlserver;Initial Catalog=TokenServiceDb;User ID=sa;Password=Eventcatalog(2$);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false"
      MvcClient: http://localhost:7080
    ports:
      - "5020:80"
    container_name: eventstokenapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokensqlserver

  cart:
    image: events/cartapi
    build:
      context: .\CartAPI
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      IdentityUrl: http://192.168.1.15:5020
      ConnectionString: basket.data
    ports:
      - "5040:80"
    container_name: eventscartapi
    networks:
      - frontend
      - backend
    depends_on:
      - eventstokenserver
      - basket.data
      - rabbitmq

  order:
    image: events/orderapi
    build:
      context: .\OrderAPI
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment:
      IdentityUrl: http://192.168.1.15:5020
      ConnectionString: "Data Source=ordersqlserver;Initial Catalog=EventorderDb;User ID=sa;Password=Eventcatalog(2$);Connect Timeout=30;TrustServerCertificate=false;Encrypt=false"
    ports:
      - "5045:80"
    container_name: eventsorderapi
    networks:
      - frontend
      - backend
    depends_on:
      - eventstokenserver
      - ordersqlserver
      - rabbitmq


  webmvcnew:
    image: events/webmvcnew
    build:
      context: .\WebMVCnew
      dockerfile: Dockerfile
    logging:
      driver: "json-file"
      options: {
        max-size: "200k",
        max-file: "10"
      }
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
      EventCatalogUrl: http://eventcatalog
      IdentityUrl: http://192.168.1.15:5020
      CallBackUrl: http://localhost:7080
      CartUrl: http://cart
      OrderUrl: http://order
      StripePublicKey: pk_test_51MWvRYJzREhwCNBFYWw89fxuFJN8ZEf033u8ueHJeoCe6h9qj4vTDoG3i2ks9FBd8vN0AJ77PSmg3FyidLSjZi1K008DGEuStW
      StripePrivateKey: sk_test_51MWvRYJzREhwCNBF2xbfLvGVXefV269HyHRGawvCN5kzXoohLB3oCNFqoibWrXhshwXE2qaZX17efj7KTUcldWNq00RffizPP4
    ports:
      - "7080:80"
    container_name: eventsticketsshop
    networks:
      - frontend
    depends_on:
      - eventcatalog
      - eventstokenserver
      - cart
      - order
     
  

  mssqlserver:
     image: "mcr.microsoft.com/mssql/server:latest"
     environment:
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Eventcatalog(2$)
       SA_PASSWORD: Eventcatalog(2$)
     ports:
       - "5001:1433"
     container_name: eventssqlserver
     networks:
       - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Eventcatalog(2$)
       SA_PASSWORD: Eventcatalog(2$)
    ports:
      - "5010:1433"
    container_name: eventstokensqlserver
    networks:
      - backend

  basket.data:
    image: redis
    ports:
      - "5030:6379"
    container_name: eventsbasketdata
    networks:
      - backend

  ordersqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment: 
       ACCEPT_EULA: Y
       MSSQL_SA_PASSWORD: Eventcatalog(2$)
       SA_PASSWORD: Eventcatalog(2$)
    ports:
      - "5050:1433"
    container_name: eventsordersqlserver
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3
    container_name: rabbitmq1
    hostname: myrabbitmq
    ports:
      - "15670:15670"
      - "5670:5670"
      - "5640:5640"
    networks:
      - backend 